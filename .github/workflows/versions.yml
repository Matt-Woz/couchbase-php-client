name: versions

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  source_abi:
    runs-on: ubuntu-22.04
    outputs:
      extension_version: ${{ steps.build_extension.outputs.extension_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          fetch-tags: true
      - uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          key: ${{ github.job }}
      - name: Build
        id: build_extension
        run: |
          gem install --no-document --user-install nokogiri
          export COMMITS_SINCE_LAST_TAG=$(git describe --tags --always --long | awk -F '-' '{print $2}')
          EXTENSION_VERSION=$(ruby -e 'print [ARGF.read[/PHP_COUCHBASE_VERSION "(\d+\.\d+\.\d+)"/, 1], ENV["COMMITS_SINCE_LAST_TAG"].to_i > 0 ? ENV["COMMITS_SINCE_LAST_TAG"] : nil].compact.join(".")' src/php_couchbase.hxx)
          echo "extension_version=${EXTENSION_VERSION}" >> "$GITHUB_OUTPUT"
          ABI_VERSION=$(ruby -e 'print ARGF.read[/PHP_COUCHBASE_VERSION "(\d+\.\d+\.\d+)"/, 1].gsub(".", "_")' src/php_couchbase.hxx)
          echo "abi_version=${ABI_VERSION}" >> "$GITHUB_ENV"
          export BUILD_NUMBER="${COMMITS_SINCE_LAST_TAG}"
          ruby ./bin/package.rb
      - name: PHPDoc
        run: |
          ruby ./bin/docs.rb
      - uses: actions/upload-artifact@v4
        with:
          name: couchbase-${{ steps.build_extension.outputs.extension_version }}
          path: |
            couchbase-*.tgz
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: scripts-${{ steps.build_extension.outputs.extension_version }}
          path: |
            bin/**/*
            90-couchbase.ini
            phpcs.xml
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: tests-${{ steps.build_extension.outputs.extension_version }}
          path: |
            tests/**/*
      - uses: actions/upload-artifact@v4
        with:
          name: docs-${{ steps.build_extension.outputs.extension_version }}
          path: |
            build/couchbase-php-client-*/**/*
  abi_linux_build:
    needs: source_abi
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        version:
          - unversioned
          - ${ABI_VERSION}
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: json, mbstring, intl
        env:
          phpts: nts
      - uses: actions/download-artifact@v4
        with:
          name: couchbase-${{ needs.source_abi.outputs.extension_version }}
      - uses: actions/download-artifact@v4
        with:
          name: scripts-${{ needs.source_abi.outputs.extension_version }}
      - uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          key: ${{ github.job }}-${{ matrix.version }}
      - name: Build
        run: |
          if [ "${{ matrix.version }}" != "unversioned" ]; then
            echo "CB_ABI_VERSION=${{ matrix.version }}" >> $GITHUB_ENV
            echo "Building versioned extension: ${CB_ABI_VERSION}"
          else
            echo "Building unversioned extension"
          fi
          pecl bundle couchbase-${{ needs.source_abi.outputs.extension_version }}.tgz
          (
            cd couchbase
            phpize
            ./configure --enable-couchbase
            mkdir target
            make INSTALL_ROOT="$(realpath target)" install
          )
          DIST_NAME=couchbase-${{ matrix.version }}-linux-x86_64
          mkdir ${DIST_NAME}
          cp -av couchbase/LICENSE 90-couchbase.ini couchbase/Couchbase couchbase/GPBMetadata ${DIST_NAME}/
          find couchbase/target -name couchbase.so -exec cp -v {} ${DIST_NAME}/ \;
          strip --strip-all ${DIST_NAME}/couchbase.so
          if [ -n "${CB_ABI_VERSION}" ]; then
              mv ${DIST_NAME}/couchbase.so ${DIST_NAME}/couchbase_${CB_ABI_VERSION}.so
          fi          
          tar cv ${DIST_NAME}/ | gzip -9 > ${DIST_NAME}.tgz
      - uses: actions/upload-artifact@v4
        with:
          name: couchbase-${{ matrix.version }}-linux-x86_64
          path: |
            couchbase-*-linux-x86_64.tgz
  abi_linux_x86_64_test:
    needs:
      - source_abi
      - abi_linux_build
    runs-on: ubuntu-22.04
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: json, mbstring, intl
        env:
          phpts: nts
      - uses: actions/download-artifact@v4
        with:
          name: couchbase-${{ needs.source_abi.outputs.extension_version }}
      - uses: actions/download-artifact@v4
        with:
          name: scripts-${{ needs.source_abi.outputs.extension_version }}
      - uses: actions/download-artifact@v4
        with:
          path: tests
          name: tests-${{ needs.source_abi.outputs.extension_version }}
      - uses: actions/download-artifact@v4
        with:
          name: couchbase-${ABI_VERSION}-linux-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: couchbase-unversioned-linux-x86_64
      - name: Test
        env:
          TEST_ABI: "both"
        run: |
          tar xf couchbase-*-linux-x86_64.tgz
          ruby ./bin/test.rb